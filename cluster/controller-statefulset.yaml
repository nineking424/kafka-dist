apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-controller
  namespace: kafka
spec:
  serviceName: kafka-controller-headless
  replicas: 3
  selector:
    matchLabels:
      app: kafka-controller
  template:
    metadata:
      labels:
        app: kafka-controller
    spec:
      containers:
      - name: controller
        image: apache/kafka:4.0.1-rc0
        ports:
        - containerPort: 29093
          name: controller
        env:
        - name: KAFKA_PROCESS_ROLES
          value: "controller"
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: "0@kafka-controller-0.kafka-controller-headless.kafka.svc.cluster.local:29093,1@kafka-controller-1.kafka-controller-headless.kafka.svc.cluster.local:29093,2@kafka-controller-2.kafka-controller-headless.kafka.svc.cluster.local:29093"
        - name: KAFKA_LISTENERS
          value: "CONTROLLER://:29093"
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT"
        - name: CLUSTER_ID
          value: "4L6g3nShT-eMCtK--X86sw"
        - name: KAFKA_LOG_DIRS
          value: "/var/lib/kafka/data"
        command:
        - sh
        - -c
        - |
          export KAFKA_NODE_ID=${HOSTNAME##*-}
          echo "Starting Kafka controller with NODE_ID=$KAFKA_NODE_ID"
          # Create a config override file
          cat <<EOF > /tmp/controller.properties
          # Basic controller properties
          process.roles=controller
          node.id=$KAFKA_NODE_ID
          controller.quorum.voters=${KAFKA_CONTROLLER_QUORUM_VOTERS}
          listeners=${KAFKA_LISTENERS}
          controller.listener.names=${KAFKA_CONTROLLER_LISTENER_NAMES}
          listener.security.protocol.map=${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
          log.dirs=${KAFKA_LOG_DIRS}
          EOF
          # Format storage if needed
          if [ ! -f /var/lib/kafka/data/meta.properties ]; then
            /opt/kafka/bin/kafka-storage.sh format -t ${CLUSTER_ID} -c /tmp/controller.properties --ignore-formatted
          fi
          exec /opt/kafka/bin/kafka-server-start.sh /tmp/controller.properties
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
        livenessProbe:
          tcpSocket:
            port: 29093
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 29093
          initialDelaySeconds: 30
          periodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 5Gi